SWAction = do_TestCurveDrivingSimulation(rad,initialoffset,Accumulator, startTime(st))   ;
end
% pause;
% SWAction has VSWRate, VSWAngle, VTimeStamp.
% Time til first action.
nonzero = find(SWAction.VSWRate);
FirstSWAction = SWAction.VTimeStamp(nonzero(1));
MStarts(r,i,m,st) = FirstSWAction;
% Amplitude. Find point were diff(VSWRate < 0)
% [pks idx] = findpeaks(abs(SWAction.VSWRate)); # find peaks doesn't always seem reliable
%        amp = abs(SWAction.VSWRate(idx(1))* 180/pi);
amp = SWAction.VAdjustmentAmplitudes(1);
%        deriv = diff(SWAction.VSWRate);
%        crest = find(deriv<0);
%        amp  = SWAction.VSWRate(crest(1))*180/pi; # amp is simply height of first peak.
MAmps(r,i,m,st) = amp;
end
end
end
end
%%% used the run_matlab_code() function to complete for loops
MStarts
% then plot.
%%% Plot many parameterisations of threshold alongside each other??
figure(55);
clf
subplot(2,1,1)
thresh_ls = {'c--';'c-';'c--o'}
accum_ls = {'m--';'m-';'m--o'}
for r = 1:NRuns
hold on
for st = 1:3
plot(Vradii,squeeze(MStarts(r,:,1,st)),thresh_ls{st}, 'LineWidth',1);
plot(Vradii,squeeze(MStarts(r,:,2,st)),accum_ls{st}, 'LineWidth',1);
end
end
% plot average.
% for m=1:2
%  modelstarts = squeeze(MStarts(:,:,m));
%  modelstart_avg = mean(modelstarts,1);
%  if m==1
%    plot(Vradii,modelstart_avg,'b-','LineWidth',2);
%  elseif m==2
%    plot(Vradii,modelstart_avg,'r-','LineWidth',2);
%  end
% end
ylabel('Time until First Steering Wheel Movement')
xlabel('Radii')
legendstr = {'Thr-0s','Acc-0s','Thr-.5s','Acc-.5s','Thr-1s','Acc-1s'};
%legend('Threshold','Accumulator')
legend(legendstr,'Orientation','horizontal')
MAmps
subplot(2,1,2)
for r = 1:NRuns
hold on
for st = 1:3
plot(Vradii,log(squeeze(MAmps(r,:,1,st))),thresh_ls{st}, 'LineWidth',1);
plot(Vradii,log(squeeze(MAmps(r,:,2,st))),accum_ls{st}, 'LineWidth',1);
end
end
%plot average.
%for m=1:2
%  modelamps = squeeze(MAmps(:,:,m));
%  modelamps_avg = mean(modelamps,1);
%  if m==1
%    plot(Vradii,log(modelamps_avg),'b-','LineWidth',2);
%  elseif m==2
%    plot(Vradii,log(modelamps_avg),'r-','LineWidth',2);
%  end
%end
ylabel('First Adjustment Amplitude log(gtilde)')
xlabel('Radii')
%legend('Threshold','Accumulator')
legend(legendstr,'Orientation','horizontal')")
# Wrapper to Gustav Model. Threshold vs. Accumulator. CDM. 03/06/17
# Recoded in R. Threshold vs Accumulator. CMG. 18/12/18
# Aim is to test many radii and lateral offset to see if they produce different starting times.
# First step, compare across radii, sans noise, to see if the time to SWAction differentially changes across models.
#Get parameters from Gustav's best fit.
setwd("/PhD/R/Modelling code/Accum vs Threshold") #### set directory where the rest of the .mat files and functions are
devtools::install_github("muschellij2/matlabr")
library(matlabr)
options(matlab.path = "/ProgramData/Microsoft/Windows/Start Menu/Programs/MATLAB R2018a")
have_matlab() #### If TRUE, matlab has been downloaded
# SBestFitThreshold = run_matlab_script("ThresholdModelFittingResults_ChiSquareCorrected_FurtherOptimised.mat");
run_matlab_code("Threshold.k = NaN;
Threshold.sigma_n = 0; % 0.0057;
Threshold.Athreshold = .025 %.035  # 0.01829;
Threshold.sigma_m = 0; % 0.65547;
Threshold.bThreshold = true;
% SBestFitAccumulator = load('AccumulatorModelFittingResults_ChiSquareCorrected_FurtherOptimised.mat');
Accumulator.k = 200;
Accumulator.sigma_n = 0; % 0.8; % Zero noise
Accumulator.Athreshold = 1 % 1;
Accumulator.sigma_m = 0; % 0.8;
Accumulator.bThreshold = false;
% Run model over many radii
initialoffset = 0; % for now, no offset.
Vradii = 100:100:2500;
NRuns = 1;
MStarts = zeros(NRuns,length(Vradii),2,3); % holds swaction times for each model run
MAmps = zeros(NRuns,length(Vradii),2,3); % holds swaction times for each model run
startTime = [0, 0.5, 1]; % does this manipulate visibility?
for m = 1:2
for i = 1:length(Vradii)
% loop through radii
rad = Vradii(i);
for st = 1:3
startTime(st)
for r = 1:NRuns
if m==1
SWAction = do_TestCurveDrivingSimulation(rad,initialoffset,Threshold, startTime(st));
elseif m==2
SWAction = do_TestCurveDrivingSimulation(rad,initialoffset,Accumulator, startTime(st))   ;
end
% pause;
% SWAction has VSWRate, VSWAngle, VTimeStamp.
% Time til first action.
nonzero = find(SWAction.VSWRate);
FirstSWAction = SWAction.VTimeStamp(nonzero(1));
MStarts(r,i,m,st) = FirstSWAction;
% Amplitude. Find point were diff(VSWRate < 0)
% [pks idx] = findpeaks(abs(SWAction.VSWRate)); # find peaks doesn't always seem reliable
%        amp = abs(SWAction.VSWRate(idx(1))* 180/pi);
amp = SWAction.VAdjustmentAmplitudes(1);
%        deriv = diff(SWAction.VSWRate);
%        crest = find(deriv<0);
%        amp  = SWAction.VSWRate(crest(1))*180/pi; # amp is simply height of first peak.
MAmps(r,i,m,st) = amp;
end
end
end
end
%%% used the run_matlab_code() function to complete for loops
MStarts
% then plot.
%%% Plot many parameterisations of threshold alongside each other??
figure(55);
clf
subplot(2,1,1)
thresh_ls = {'c--';'c-';'c--o'}
accum_ls = {'m--';'m-';'m--o'}
for r = 1:NRuns
hold on
for st = 1:3
plot(Vradii,squeeze(MStarts(r,:,1,st)),thresh_ls{st}, 'LineWidth',1);
plot(Vradii,squeeze(MStarts(r,:,2,st)),accum_ls{st}, 'LineWidth',1);
end
end
% plot average.
% for m=1:2
%  modelstarts = squeeze(MStarts(:,:,m));
%  modelstart_avg = mean(modelstarts,1);
%  if m==1
%    plot(Vradii,modelstart_avg,'b-','LineWidth',2);
%  elseif m==2
%    plot(Vradii,modelstart_avg,'r-','LineWidth',2);
%  end
% end
ylabel('Time until First Steering Wheel Movement')
xlabel('Radii')
legendstr = {'Thr-0s','Acc-0s','Thr-.5s','Acc-.5s','Thr-1s','Acc-1s'};
%legend('Threshold','Accumulator')
legend(legendstr,'Orientation','horizontal')
MAmps
subplot(2,1,2)
for r = 1:NRuns
hold on
for st = 1:3
plot(Vradii,log(squeeze(MAmps(r,:,1,st))),thresh_ls{st}, 'LineWidth',1);
plot(Vradii,log(squeeze(MAmps(r,:,2,st))),accum_ls{st}, 'LineWidth',1);
end
end
%plot average.
%for m=1:2
%  modelamps = squeeze(MAmps(:,:,m));
%  modelamps_avg = mean(modelamps,1);
%  if m==1
%    plot(Vradii,log(modelamps_avg),'b-','LineWidth',2);
%  elseif m==2
%    plot(Vradii,log(modelamps_avg),'r-','LineWidth',2);
%  end
%end
ylabel('First Adjustment Amplitude log(gtilde)')
xlabel('Radii')
%legend('Threshold','Accumulator')
legend(legendstr,'Orientation','horizontal')")
run_matlab_code("Threshold.k = NaN;
Threshold.sigma_n = 0;%0.0057;
Threshold.Athreshold = .025%.035%0.01829;
Threshold.sigma_m = 0;%0.65547;
Threshold.bThreshold = true;
%SBestFitAccumulator = load('AccumulatorModelFittingResults_ChiSquareCorrected_FurtherOptimised.mat');
Accumulator.k = 200;
Accumulator.sigma_n = 0;%0.8; %Zero noise
Accumulator.Athreshold = 1%1;
Accumulator.sigma_m = 0;%0.8;
Accumulator.bThreshold = false;
%Run model over many radii
initialoffset = 0; %for now, no offset.
Vradii = 100:100:2500;
NRuns = 1;
MStarts = zeros(NRuns,length(Vradii),2,3); %holds swaction times for each model run
MAmps = zeros(NRuns,length(Vradii),2,3); %holds swaction times for each model run
startTime = [0 0.5 1]; %does this manipulate visibility?
for m = 1:2
for i = 1:length(Vradii)
%loop through radii
rad = Vradii(i);
for st = 1:3
%      startTime(st)
for r = 1:NRuns
if m==1
SWAction = do_TestCurveDrivingSimulation(rad,initialoffset,Threshold, startTime(st));
elseif m==2
SWAction = do_TestCurveDrivingSimulation(rad,initialoffset,Accumulator, startTime(st))   ;
end
%        pause;
%SWAction has VSWRate, VSWAngle, VTimeStamp.
%Time til first action.
nonzero = find(SWAction.VSWRate);
FirstSWAction = SWAction.VTimeStamp(nonzero(1));
MStarts(r,i,m,st) = FirstSWAction;
%Amplitude. Find point were diff(VSWRate < 0)
%%        [pks idx] = findpeaks(abs(SWAction.VSWRate)); %find peaks doesn't always seem reliable
%        amp = abs(SWAction.VSWRate(idx(1))* 180/pi);
amp = SWAction.VAdjustmentAmplitudes(1);
%        deriv = diff(SWAction.VSWRate);
%        crest = find(deriv<0);
%        amp  = SWAction.VSWRate(crest(1))*180/pi; %amp is simply height of first peak.
MAmps(r,i,m,st) = amp;
end
end
end
end
MStarts
%then plot.
%%%Plot many parameterisations of threshold alongside each other??
figure(55);
clf
subplot(2,1,1)
thresh_ls = {'c--';'c-';'c--o'}
accum_ls = {'m--';'m-';'m--o'}
for r = 1:NRuns
hold on
for st = 1:3
plot(Vradii,squeeze(MStarts(r,:,1,st)),thresh_ls{st}, 'LineWidth',1);
plot(Vradii,squeeze(MStarts(r,:,2,st)),accum_ls{st}, 'LineWidth',1);
end
end
%plot average.
%for m=1:2
%  modelstarts = squeeze(MStarts(:,:,m));
%  modelstart_avg = mean(modelstarts,1);
%  if m==1
%    plot(Vradii,modelstart_avg,'b-','LineWidth',2);
%  elseif m==2
%    plot(Vradii,modelstart_avg,'r-','LineWidth',2);
%  end
%end
ylabel('Time until First Steering Wheel Movement')
xlabel('Radii')
legendstr = {'Thr-0s','Acc-0s','Thr-.5s','Acc-.5s','Thr-1s','Acc-1s'};
%legend('Threshold','Accumulator')
legend(legendstr,'Orientation','horizontal')
MAmps
subplot(2,1,2)
for r = 1:NRuns
hold on
for st = 1:3
plot(Vradii,log(squeeze(MAmps(r,:,1,st))),thresh_ls{st}, 'LineWidth',1);
plot(Vradii,log(squeeze(MAmps(r,:,2,st))),accum_ls{st}, 'LineWidth',1);
end
end
%%plot average.
%for m=1:2
%  modelamps = squeeze(MAmps(:,:,m));
%  modelamps_avg = mean(modelamps,1);
%  if m==1
%    plot(Vradii,log(modelamps_avg),'b-','LineWidth',2);
%  elseif m==2
%    plot(Vradii,log(modelamps_avg),'r-','LineWidth',2);
%  end
%end
ylabel('First Adjustment Amplitude log(gtilde)')
xlabel('Radii')
%legend('Threshold','Accumulator')
legend(legendstr,'Orientation','horizontal')")
# Wrapper to Gustav Model. Threshold vs. Accumulator. CDM. 03/06/17
# Aim is to test many radii and lateral offset to see if they produce different starting times.
# First step, compare across radii, sans noise, to see if the time to SWAction differentially changes across models.
# Get parameters from Gustav's best fit.
# SBestFitThreshold = load('ThresholdModelFittingResults_ChiSquareCorrected_FurtherOptimised.mat');
setwd("/PhD/R/Modelling code/Accum vs Threshold") #### set directory where the rest of the .mat files and functions are
devtools::install_github("muschellij2/matlabr")
library(matlabr)
options(matlab.path = "/ProgramData/Microsoft/Windows/Start Menu/Programs/MATLAB R2018a")
have_matlab() #### If TRUE, matlab has been downloaded
run_matlab_code("Threshold.k = NaN;
Threshold.sigma_n = 0;%0.0057;
Threshold.Athreshold = .025%.035%0.01829;
Threshold.sigma_m = 0;%0.65547;
Threshold.bThreshold = true;
%SBestFitAccumulator = load('AccumulatorModelFittingResults_ChiSquareCorrected_FurtherOptimised.mat');
Accumulator.k = 200;
Accumulator.sigma_n = 0;%0.8; %Zero noise
Accumulator.Athreshold = 1%1;
Accumulator.sigma_m = 0;%0.8;
Accumulator.bThreshold = false;
%Run model over many radii
initialoffset = 0; %for now, no offset.
Vradii = 100:100:2500;
NRuns = 1;
MStarts = zeros(NRuns,length(Vradii),2,3); %holds swaction times for each model run
MAmps = zeros(NRuns,length(Vradii),2,3); %holds swaction times for each model run
startTime = [0 0.5 1]; %does this manipulate visibility?
for m = 1:2
for i = 1:length(Vradii)
%loop through radii
rad = Vradii(i);
for st = 1:3
%      startTime(st)
for r = 1:NRuns
if m==1
SWAction = do_TestCurveDrivingSimulation(rad,initialoffset,Threshold, startTime(st));
elseif m==2
SWAction = do_TestCurveDrivingSimulation(rad,initialoffset,Accumulator, startTime(st))   ;
end
%        pause;
%SWAction has VSWRate, VSWAngle, VTimeStamp.
%Time til first action.
nonzero = find(SWAction.VSWRate);
FirstSWAction = SWAction.VTimeStamp(nonzero(1));
MStarts(r,i,m,st) = FirstSWAction;
%Amplitude. Find point were diff(VSWRate < 0)
%%        [pks idx] = findpeaks(abs(SWAction.VSWRate)); %find peaks doesn't always seem reliable
%        amp = abs(SWAction.VSWRate(idx(1))* 180/pi);
amp = SWAction.VAdjustmentAmplitudes(1);
%        deriv = diff(SWAction.VSWRate);
%        crest = find(deriv<0);
%        amp  = SWAction.VSWRate(crest(1))*180/pi; %amp is simply height of first peak.
MAmps(r,i,m,st) = amp;
end
end
end
end
MStarts
%then plot.
%%%Plot many parameterisations of threshold alongside each other??
figure(55);
clf
subplot(2,1,1)
thresh_ls = {'c--';'c-';'c--o'}
accum_ls = {'m--';'m-';'m--o'}
for r = 1:NRuns
hold on
for st = 1:3
plot(Vradii,squeeze(MStarts(r,:,1,st)),thresh_ls{st}, 'LineWidth',1);
plot(Vradii,squeeze(MStarts(r,:,2,st)),accum_ls{st}, 'LineWidth',1);
end
end
%plot average.
%for m=1:2
%  modelstarts = squeeze(MStarts(:,:,m));
%  modelstart_avg = mean(modelstarts,1);
%  if m==1
%    plot(Vradii,modelstart_avg,'b-','LineWidth',2);
%  elseif m==2
%    plot(Vradii,modelstart_avg,'r-','LineWidth',2);
%  end
%end
ylabel('Time until First Steering Wheel Movement')
xlabel('Radii')
legendstr = {'Thr-0s','Acc-0s','Thr-.5s','Acc-.5s','Thr-1s','Acc-1s'};
%legend('Threshold','Accumulator')
legend(legendstr,'Orientation','horizontal')
MAmps
subplot(2,1,2)
for r = 1:NRuns
hold on
for st = 1:3
plot(Vradii,log(squeeze(MAmps(r,:,1,st))),thresh_ls{st}, 'LineWidth',1);
plot(Vradii,log(squeeze(MAmps(r,:,2,st))),accum_ls{st}, 'LineWidth',1);
end
end
%%plot average.
%for m=1:2
%  modelamps = squeeze(MAmps(:,:,m));
%  modelamps_avg = mean(modelamps,1);
%  if m==1
%    plot(Vradii,log(modelamps_avg),'b-','LineWidth',2);
%  elseif m==2
%    plot(Vradii,log(modelamps_avg),'r-','LineWidth',2);
%  end
%end
ylabel('First Adjustment Amplitude log(gtilde)')
xlabel('Radii')
%legend('Threshold','Accumulator')
legend(legendstr,'Orientation','horizontal')")
# Wrapper to Gustav Model. Threshold vs. Accumulator. CDM. 03/06/17
# Aim is to test many radii and lateral offset to see if they produce different starting times.
# First step, compare across radii, sans noise, to see if the time to SWAction differentially changes across models.
# Get parameters from Gustav's best fit.
setwd("/PhD/R/Modelling code/Accum vs Threshold") #### set directory where the rest of the .mat files and functions are
devtools::install_github("muschellij2/matlabr") # download matlabr functions
library(matlabr) # load the matlabr functions
options(matlab.path = "/ProgramData/Microsoft/Windows/Start Menu/Programs/MATLAB R2018a")
# create a path for matlab in order to use the utilities
have_matlab() #### If TRUE, matlab has been downloaded
# used run_matlab_code() function to run the following matlab code from R. Rest of the code is within "speech marks" within this function.
run_matlab_code("%SBestFitThreshold = load('ThresholdModelFittingResults_ChiSquareCorrected_FurtherOptimised.mat');
Threshold.k = NaN;
Threshold.sigma_n = 0;%0.0057;
Threshold.Athreshold = .025%.035%0.01829;
Threshold.sigma_m = 0;%0.65547;
Threshold.bThreshold = true;
%SBestFitAccumulator = load('AccumulatorModelFittingResults_ChiSquareCorrected_FurtherOptimised.mat');
Accumulator.k = 200;
Accumulator.sigma_n = 0;%0.8; %Zero noise
Accumulator.Athreshold = 1%1;
Accumulator.sigma_m = 0;%0.8;
Accumulator.bThreshold = false;
%Run model over many radii
initialoffset = 0; %for now, no offset.
Vradii = 100:100:2500;
NRuns = 1;
MStarts = zeros(NRuns,length(Vradii),2,3); %holds swaction times for each model run
MAmps = zeros(NRuns,length(Vradii),2,3); %holds swaction times for each model run
startTime = [0 0.5 1]; %does this manipulate visibility?
for m = 1:2
for i = 1:length(Vradii)
%loop through radii
rad = Vradii(i);
for st = 1:3
%      startTime(st)
for r = 1:NRuns
if m==1
SWAction = do_TestCurveDrivingSimulation(rad,initialoffset,Threshold, startTime(st));
elseif m==2
SWAction = do_TestCurveDrivingSimulation(rad,initialoffset,Accumulator, startTime(st))   ;
end
%        pause;
%SWAction has VSWRate, VSWAngle, VTimeStamp.
%Time til first action.
nonzero = find(SWAction.VSWRate);
FirstSWAction = SWAction.VTimeStamp(nonzero(1));
MStarts(r,i,m,st) = FirstSWAction;
%Amplitude. Find point were diff(VSWRate < 0)
%%        [pks idx] = findpeaks(abs(SWAction.VSWRate)); %find peaks doesn't always seem reliable
%        amp = abs(SWAction.VSWRate(idx(1))* 180/pi);
amp = SWAction.VAdjustmentAmplitudes(1);
%        deriv = diff(SWAction.VSWRate);
%        crest = find(deriv<0);
%        amp  = SWAction.VSWRate(crest(1))*180/pi; %amp is simply height of first peak.
MAmps(r,i,m,st) = amp;
end
end
end
end
MStarts
%then plot.
%%%Plot many parameterisations of threshold alongside each other??
figure(55);
clf
subplot(2,1,1)
thresh_ls = {'c--';'c-';'c--o'}
accum_ls = {'m--';'m-';'m--o'}
for r = 1:NRuns
hold on
for st = 1:3
plot(Vradii,squeeze(MStarts(r,:,1,st)),thresh_ls{st}, 'LineWidth',1);
plot(Vradii,squeeze(MStarts(r,:,2,st)),accum_ls{st}, 'LineWidth',1);
end
end
%plot average.
%for m=1:2
%  modelstarts = squeeze(MStarts(:,:,m));
%  modelstart_avg = mean(modelstarts,1);
%  if m==1
%    plot(Vradii,modelstart_avg,'b-','LineWidth',2);
%  elseif m==2
%    plot(Vradii,modelstart_avg,'r-','LineWidth',2);
%  end
%end
ylabel('Time until First Steering Wheel Movement')
xlabel('Radii')
legendstr = {'Thr-0s','Acc-0s','Thr-.5s','Acc-.5s','Thr-1s','Acc-1s'};
%legend('Threshold','Accumulator')
legend(legendstr,'Orientation','horizontal')
MAmps
subplot(2,1,2)
for r = 1:NRuns
hold on
for st = 1:3
plot(Vradii,log(squeeze(MAmps(r,:,1,st))),thresh_ls{st}, 'LineWidth',1);
plot(Vradii,log(squeeze(MAmps(r,:,2,st))),accum_ls{st}, 'LineWidth',1);
end
end
%%plot average.
%for m=1:2
%  modelamps = squeeze(MAmps(:,:,m));
%  modelamps_avg = mean(modelamps,1);
%  if m==1
%    plot(Vradii,log(modelamps_avg),'b-','LineWidth',2);
%  elseif m==2
%    plot(Vradii,log(modelamps_avg),'r-','LineWidth',2);
%  end
%end
ylabel('First Adjustment Amplitude log(gtilde)')
xlabel('Radii')
%legend('Threshold','Accumulator')
legend(legendstr,'Orientation','horizontal')")
